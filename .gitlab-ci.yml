stages:
  - test
  - build
  # - deploy
  # - migrate

variables:
  REGISTRY: registry.w1png.ru
  IMAGE: $REGISTRY/$CI_PROJECT_PATH
  DOCKER_HOST: "tcp://localhost:2375"
  DOCKER_TLS_CERTDIR: ""

typecheck:
  stage: test
  image: oven/bun:latest
  allow_failure: true
  script:
    - bun install
    - bun run typecheck

test:
  stage: test
  image: oven/bun:latest
  script:
    - bun install
    - bun run test
  artifacts:
    when: always
    paths:
      - bun.xml
    reports:
      junit: bun.xml

build:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--tls=false", "--insecure-registry=gitlab-registry.git.svc.cluster.local:5000"]
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" gitlab-registry.git.svc.cluster.local:5000
    - docker build -t gitlab-registry.git.svc.cluster.local:5000/$CI_PROJECT_PATH:$CI_COMMIT_SHA .
    - docker push gitlab-registry.git.svc.cluster.local:5000/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  only:
    - master

# deploy:
#   stage: deploy
#   image: bitnami/kubectl:latest
#   script:
#     - kubectl delete secret REPLACE_ME-secrets -n REPLACE_ME || true
#     - kubectl create secret generic REPLACE_ME-secrets --from-literal=DATABASE_URL="$DATABASE_URL" -n REPLACE_ME
#
#     - sed -i "s|registry.w1png.ru/repo_url:.*|registry.w1png.ru/$CI_PROJECT_PATH:$CI_COMMIT_SHA|g" k8s/deployment.yaml
#     - kubectl apply -f k8s/deployment.yaml
#     - kubectl rollout restart deployment REPLACE_ME -n REPLACE_ME
#     - kubectl rollout status deployment REPLACE_ME -n REPLACE_ME
#   only:
#     - master
#
# migrate:
#   stage: migrate
#   image: node:20
#   script:
#     - npm install --legacy-peer-deps
#     - npm run db:migrate
#   only:
#     - master
#
